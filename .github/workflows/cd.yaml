name: Docker-CD

on:
  push:
    branches:
      - production
  pull_request:
    branches:
      - production
  #workflow_run:
  #  workflows: [ "CodeTest" ]
  #  types:
  #    - completed

jobs:
  docker:
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:latest, ${{ vars.DOCKERHUB_USERNAME }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ github.sha }}

      - name: Start Instance Refresh
        run: |
          aws autoscaling start-instance-refresh \
            --auto-scaling-group-name ${{ vars.ASG_NAME }} \
            --strategy Rolling \
            --region ${{ vars.AWS_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}

            #  name: Configure AWS credentials
            # uses: aws-actions/configure-aws-credentials@v3
            #with:
            # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            #aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            #aws-region: ${{ vars.AWS_REGION }}

            # -
            #  name: Refresh Auto Scaling Group
            # run: |
            #  aws autoscaling start-instance-refresh \
            #   --auto-scaling-group-name ${{ vars.ASG_NAME }} \
            #  --strategy Rolling \
            # --region ${{ vars.AWS_REGION }}
